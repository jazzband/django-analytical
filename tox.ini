[tox]
envlist =
    # Python/Django combinations that are officially supported
    py{27,34,35,36,37}-django111
    py{35,36,37,38}-django22
    py{36,37,38}-django30
    flake8
    bandit
    readme
    docs
    clean

[testenv]
description = Unit tests
deps =
    coverage
    coveralls
    django111: Django>=1.11,<2.0
    django22: Django>=2.2,<3.0
    django30: Django>=3.0,<3.1
commands =
    coverage run setup.py test
    sh -c 'coveralls | true'
passenv = TRAVIS TRAVIS_JOB_ID TRAVIS_BRANCH
whitelist_externals = sh

[testenv:bandit]
description = PyCQA security linter
deps = bandit<1.6
commands = bandit -r --ini tox.ini

[testenv:clean]
description = Clean up bytecode and build artifacts
deps =
commands =
    rm -rf .tox/ django_analytical.egg-info/ build/ dist/ docs/_build/
    find {toxinidir} -type f -name '*.pyc' -delete
    find {toxinidir} -type d -name '__pycache__' -delete
whitelist_externals =
    find
    rm

[testenv:docs]
description = Build the HTML documentation
deps = sphinx
commands = sphinx-build -b html -d docs/_build/doctrees docs docs/_build/html
whitelist_externals = make

[testenv:flake8]
description = Static code analysis and code style
deps = flake8
commands = flake8

[testenv:readme]
description = Ensure README renders on PyPI
deps = twine
commands =
    {envpython} setup.py -q sdist bdist_wheel
    twine check dist/*

[travis:env]
DJANGO =
    1.11: django111
    2.2: django22
    3.0: django30

[bandit]
exclude = .cache,.git,.tox,build,dist,docs,tests
targets = .

[flake8]
exclude = .cache,.git,.tox,build,dist
max-line-length = 100
